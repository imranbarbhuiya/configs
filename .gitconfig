[user]
	name = parbez
	email = imranbarbhuiya.fsd@gmail.com
[gpg]
	program = C:\\Program Files (x86)\\GnuPG\\bin\\gpg.exe
[pager]
	branch = false
	diff = delta
	reflog = delta
	show = delta
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
[commit]
	gpgsign = true
[tag]
	forceSignAnnotated = true
[init]
	defaultBranch = main
[core]
	editor = code --wait
	autocrlf = false
	ignoreCase = false
	symlinks = true
[alias]
  # List all available aliases
  alias = !git config --get-regexp ^alias\\. | sed -e s/^alias\\.// -e s/\\ /\\ =\\ /
  # Delete all local branches but main and the current one, only if they are fully merged with main.
  br-delete-useless = !git branch | grep -v "main" | grep -v ^* | xargs -r git branch -d
  # Checkout
  co = checkout
  # Cherry Pick
  cp = cherry-pick
  # Commit with whatthecommit
  ciyolo = "!f() { response=$(curl -s https://whatthecommit.com/index.json); message=$(echo ${response} | jq -r '.commit_message'); link=$(echo ${response} | jq -r '.permalink'); git commit $@ -nam \"chore: $(echo ${message} | tr '[:upper:]' '[:lower:]')\" -m \"permalink: ${link}\"; }; f"
  # Commit with whatthecommit then push
  yolo = !git ciyolo && git push
  # Hard resets the local branch to the remote version. Warning: any changes comitted will be lost. This is a destructive command!
  hardreset = "!f(){ read -n 1 -r -p 'Are you sure that you want to run git hardreset? [Y/n] '; echo; [[ $REPLY =~ ^[Yy]$ ]] && echo; git reset --hard origin/$(git rev-parse --abbrev-ref HEAD); }; f"
[push]
	autoSetupRemote = true
[pull]
	rebase = true
[rebase]
	autoStash = true
[merge]
	tool = vscode
[mergetool "vscode"]
	cmd = code --wait --merge $REMOTE $LOCAL $BASE $MERGED
[diff]
	tool = vscode
[difftool "vscode"]
	cmd = code --wait --diff $LOCAL $REMOTE
[interactive]
	diffFilter = delta --color-only --features=interactive